[{"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\reportWebVitals.ts":"1","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\App.tsx":"2","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\routes\\MainRoute.tsx":"3","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\routes\\RouteList.tsx":"4","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Dashboard.tsx":"5","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\SignIn.tsx":"6","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\TextInput.tsx":"7","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\Button.tsx":"8","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\ControlledTextInput.tsx":"9","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\index.tsx":"10","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\index.ts":"11","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\Checkbox.tsx":"12","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\Text.tsx":"13","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\index.ts":"14","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\Drawer.tsx":"15","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\constants\\colors.ts":"16","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\index.ts":"17","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\MenuItem.tsx":"18","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\create.tsx":"19","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\Main.tsx":"20","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\edit.tsx":"21","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\index.ts":"22","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\lists.tsx":"23","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\Edit.tsx":"24","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\Create.tsx":"25","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\Lists.tsx":"26","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\Table.tsx":"27","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\constants\\size.ts":"28","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\helpers\\fetchApi.ts":"29"},{"size":425,"mtime":1611397057472,"results":"30","hashOfConfig":"31"},{"size":283,"mtime":1611408466320,"results":"32","hashOfConfig":"31"},{"size":305,"mtime":1611408130754,"results":"33","hashOfConfig":"31"},{"size":650,"mtime":1611673840292,"results":"34","hashOfConfig":"31"},{"size":2150,"mtime":1612496920733,"results":"35","hashOfConfig":"31"},{"size":3110,"mtime":1611500990175,"results":"36","hashOfConfig":"31"},{"size":1635,"mtime":1611658195365,"results":"37","hashOfConfig":"31"},{"size":1913,"mtime":1611653987353,"results":"38","hashOfConfig":"31"},{"size":1171,"mtime":1611658039937,"results":"39","hashOfConfig":"31"},{"size":500,"mtime":1611397057472,"results":"40","hashOfConfig":"31"},{"size":258,"mtime":1611407957087,"results":"41","hashOfConfig":"31"},{"size":1331,"mtime":1611407428854,"results":"42","hashOfConfig":"31"},{"size":1172,"mtime":1611498847295,"results":"43","hashOfConfig":"31"},{"size":260,"mtime":1611466093865,"results":"44","hashOfConfig":"31"},{"size":3203,"mtime":1611464200617,"results":"45","hashOfConfig":"31"},{"size":1359,"mtime":1611459819282,"results":"46","hashOfConfig":"31"},{"size":222,"mtime":1611472944248,"results":"47","hashOfConfig":"31"},{"size":1058,"mtime":1611459521043,"results":"48","hashOfConfig":"31"},{"size":407,"mtime":1611465727295,"results":"49","hashOfConfig":"31"},{"size":514,"mtime":1611466319394,"results":"50","hashOfConfig":"31"},{"size":731,"mtime":1611465732231,"results":"51","hashOfConfig":"31"},{"size":125,"mtime":1611466060656,"results":"52","hashOfConfig":"31"},{"size":730,"mtime":1611465748047,"results":"53","hashOfConfig":"31"},{"size":5636,"mtime":1612496070330,"results":"54","hashOfConfig":"31"},{"size":4906,"mtime":1611674114327,"results":"55","hashOfConfig":"31"},{"size":3041,"mtime":1611654573986,"results":"56","hashOfConfig":"31"},{"size":1508,"mtime":1611495769918,"results":"57","hashOfConfig":"31"},{"size":183,"mtime":1610682328947,"results":"58","hashOfConfig":"31"},{"size":1567,"mtime":1611657218798,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kcb6qf",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\reportWebVitals.ts",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\App.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\routes\\MainRoute.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\routes\\RouteList.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Dashboard.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\SignIn.tsx",["125","126","127","128","129"],"import React, {useState} from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ControlledTextInput from '../general/components/ControlledTextInput';\r\nimport { Button, Text } from '../general/core-ui';\r\n\r\ntype SignInForm = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nexport default function SignIn() {\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  let { control, errors, handleSubmit, setValue } = useForm<SignInForm>();\r\n  let [username, setUsername]= useState('');\r\n  let [password, setPassword] = useState('');\r\n  let [passwordHide, setPasswordHide] = useState(true);\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Text size='xlarge' className={classes.title}>\r\n          Sign in\r\n        </Text>\r\n        <ControlledTextInput\r\n          onChangeText={(text) => setUsername(text)}\r\n          control={control}\r\n          rules={{\r\n            required: 'UserName wajib diisi',\r\n            minLength: {\r\n              value: 5,\r\n              message: 'UserName minimal 5 karakter',\r\n            },\r\n          }}\r\n          error={!!errors.username}\r\n          helperText={errors.username?.message}\r\n          name='username'\r\n          label='Masukan Username Anda*'\r\n          classes={{\r\n            root: classes.input,\r\n          }}\r\n        />\r\n        <ControlledTextInput\r\n          onChangeText={(text) => setPassword(text)}\r\n          control={control}\r\n          rules={{\r\n            required: 'Password wajib diisi',\r\n            minLength: {\r\n              value: 5,\r\n              message: 'Password minimal 5 karakter',\r\n            },\r\n          }}\r\n          error={!!errors.password}\r\n          helperText={errors.password?.message}\r\n          name='password'\r\n          label='Password*'\r\n          type='password'\r\n          classes={{\r\n            root: classes.input,\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          onPress={handleSubmit((_data) => {\r\n            history.push('/dashboard');\r\n          })}\r\n        >\r\n          Sign in\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(25),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    marginBottom: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: 20,\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  input: {\r\n    color: '#333',\r\n    '& .MuiOutlinedInput-root': {\r\n      '&.Mui-focused fieldset': {\r\n        border: '2px solid #333', // focus\r\n      },\r\n    },\r\n    '& .MuiInputLabel-root': {\r\n      '&.Mui-focused': {\r\n        color: '#333',\r\n      },\r\n    },\r\n    marginBottom: 20,\r\n    width: '100%',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n",["130","131"],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\TextInput.tsx",["132"],"import React, {forwardRef, ReactNode, Ref} from 'react';\r\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport {TEXT_INPUT} from '../constants/colors';\r\n\r\ntype TypeInput = 'text' | 'password';\r\n\r\nexport type TextInputCoreUIProps = TextFieldProps & {\r\n  onChangeText?: (input: string) => void;\r\n  label?: string;\r\n  leftElement?: ReactNode;\r\n  rightElement?: ReactNode;\r\n  readOnly?: boolean;\r\n  typeInput?: TypeInput\r\n};\r\n\r\nfunction TextInput(props: TextInputCoreUIProps, ref: Ref<HTMLDivElement>) {\r\n  let {\r\n    label,\r\n    onChangeText,\r\n    leftElement,\r\n    rightElement,\r\n    readOnly,\r\n    disabled,\r\n    style,\r\n    typeInput= 'text',\r\n    ...otherProps\r\n  } = props;\r\n\r\n  let combinedStyle = {\r\n    ...(disabled ? {backgroundColor: TEXT_INPUT.disable} : {}),\r\n    ...style,\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      color=\"primary\"\r\n      label={label}\r\n      ref={ref}\r\n      variant=\"outlined\"\r\n      onChange={\r\n        onChangeText\r\n          ? (event) => {\r\n              onChangeText && onChangeText(event.target.value);\r\n            }\r\n          : undefined\r\n      }\r\n      style={combinedStyle}\r\n      disabled={disabled || readOnly}\r\n      InputProps={{\r\n        startAdornment: leftElement ? (\r\n          <InputAdornment position=\"start\">{leftElement}</InputAdornment>\r\n        ) : undefined,\r\n        endAdornment: rightElement ? (\r\n          <InputAdornment position=\"end\">{rightElement}</InputAdornment>\r\n        ) : undefined,\r\n      }}\r\n      {...otherProps}\r\n    />\r\n  );\r\n}\r\n\r\nexport default forwardRef(TextInput);\r\n","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\Button.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\ControlledTextInput.tsx",["133","134"],"import { render } from '@testing-library/react';\r\nimport React, {ChangeEvent} from 'react';\r\nimport {Controller, UseControllerOptions} from 'react-hook-form';\r\nimport {TextInput, TextInputCoreUIProps} from '../core-ui';\r\n\r\ntype Props = UseControllerOptions &\r\n  TextInputCoreUIProps & {\r\n    transformOutput?: (\r\n      event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => any;\r\n  };\r\n\r\nfunction ControlledTextInput(props: Props) {\r\n  let {\r\n    control,\r\n    name,\r\n    rules,\r\n    transformOutput,\r\n    defaultValue = '',\r\n    value='',\r\n    ...textInputProps\r\n  } = props;\r\n  console.log('render');\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      rules={rules}\r\n      defaultValue={defaultValue}\r\n      render={({onChange, ...controllerProps}) => (\r\n        <TextInput\r\n          {...textInputProps}\r\n          {...controllerProps}\r\n          onChange={\r\n            transformOutput\r\n              ? (data) => {\r\n                  onChange(transformOutput && transformOutput(data));\r\n                }\r\n              : onChange\r\n          }\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ControlledTextInput;\r\n","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\index.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\index.ts",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\Checkbox.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\core-ui\\Text.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\index.ts",[],["135","136"],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\Drawer.tsx",["137"],"import React, { ReactNode } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport List from \"@material-ui/core/List\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n\r\nimport { MENULIST } from \"../constants/colors\";\r\n\r\n\r\n// type Props = RouteComponentProps & {\r\n//   children?: ReactNode;\r\n// };\r\n\r\nfunction DrawerLeft() {\r\n  // let { history, children } = props;\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          {open ? (\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon className={classes.icon} />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton onClick={handleDrawerOpen}>\r\n              <ChevronRightIcon className={classes.icon} />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MenuItem onPress={() => history.push('/dashboard')} title=\"Absences\">\r\n            <DashboardIcon />\r\n          </MenuItem>\r\n          <MenuItem onPress={() => history.push('/employee')} title=\"Employee\">\r\n            <PeopleIcon />\r\n          </MenuItem>\r\n        </List>\r\n\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrawerLeft;\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    color: MENULIST.default,\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    backgroundColor: \"#333333\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\constants\\colors.ts",["138","139","140","141","142","143","144"],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\index.ts",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\MenuItem.tsx",["145"],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\create.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\Main.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\edit.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\index.ts",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\lists.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\Edit.tsx",["146","147"],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\Create.tsx",["148"],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\scenes\\Employee\\Lists.tsx",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\components\\Table.tsx",["149"],"import React, { ReactNode } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Table as TableMaterial } from \"@material-ui/core\";\r\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/core\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Text } from \"../core-ui\";\r\ntype Props = WithStyles<typeof styles> & {\r\n  lists: Array<string>;\r\n  children: ReactNode;\r\n};\r\n\r\nfunction Table(props: Props) {\r\n  let { lists, children, classes } = props;\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <TableMaterial className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            {lists.map((data, index) => (\r\n              <TableCell key={index}>\r\n                <Text bold>{data}</Text>\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{children}</TableBody>\r\n      </TableMaterial>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n// function ItemTable(props: Props) {\r\n//   return (\r\n//     <TableRow>\r\n//       <TableCell>\r\n\r\n//       </TableCell>\r\n//     </TableRow>\r\n//   );\r\n// }\r\n\r\nconst styles = createStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Table);\r\n","D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\constants\\size.ts",[],"D:\\Projects\\ABSENSI\\employee-absences-dashboard\\src\\general\\helpers\\fetchApi.ts",[],{"ruleId":"150","severity":1,"message":"151","line":21,"column":40,"nodeType":"152","messageId":"153","endLine":21,"endColumn":48},{"ruleId":"150","severity":1,"message":"154","line":22,"column":8,"nodeType":"152","messageId":"153","endLine":22,"endColumn":16},{"ruleId":"150","severity":1,"message":"155","line":23,"column":8,"nodeType":"152","messageId":"153","endLine":23,"endColumn":16},{"ruleId":"150","severity":1,"message":"156","line":24,"column":8,"nodeType":"152","messageId":"153","endLine":24,"endColumn":20},{"ruleId":"150","severity":1,"message":"157","line":24,"column":22,"nodeType":"152","messageId":"153","endLine":24,"endColumn":37},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"150","severity":1,"message":"162","line":27,"column":5,"nodeType":"152","messageId":"153","endLine":27,"endColumn":14},{"ruleId":"150","severity":1,"message":"163","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":16},{"ruleId":"150","severity":1,"message":"164","line":20,"column":5,"nodeType":"152","messageId":"153","endLine":20,"endColumn":10},{"ruleId":"158","replacedBy":"165"},{"ruleId":"160","replacedBy":"166"},{"ruleId":"150","severity":1,"message":"167","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"168","line":6,"column":7,"nodeType":"152","messageId":"153","endLine":6,"endColumn":16},{"ruleId":"150","severity":1,"message":"169","line":7,"column":7,"nodeType":"152","messageId":"153","endLine":7,"endColumn":16},{"ruleId":"150","severity":1,"message":"170","line":9,"column":7,"nodeType":"152","messageId":"153","endLine":9,"endColumn":16},{"ruleId":"150","severity":1,"message":"171","line":11,"column":7,"nodeType":"152","messageId":"153","endLine":11,"endColumn":18},{"ruleId":"150","severity":1,"message":"172","line":17,"column":7,"nodeType":"152","messageId":"153","endLine":17,"endColumn":14},{"ruleId":"150","severity":1,"message":"173","line":18,"column":7,"nodeType":"152","messageId":"153","endLine":18,"endColumn":13},{"ruleId":"150","severity":1,"message":"174","line":20,"column":7,"nodeType":"152","messageId":"153","endLine":20,"endColumn":13},{"ruleId":"150","severity":1,"message":"175","line":18,"column":34,"nodeType":"152","messageId":"153","endLine":18,"endColumn":42},{"ruleId":"176","severity":1,"message":"177","line":33,"column":6,"nodeType":"178","endLine":33,"endColumn":13,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":33,"column":7,"nodeType":"181","endLine":33,"endColumn":12},{"ruleId":"150","severity":1,"message":"151","line":25,"column":40,"nodeType":"152","messageId":"153","endLine":25,"endColumn":48},{"ruleId":"150","severity":1,"message":"182","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":20},"@typescript-eslint/no-unused-vars","'setValue' is assigned a value but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'passwordHide' is assigned a value but never used.","'setPasswordHide' is assigned a value but never used.","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'typeInput' is assigned a value but never used.","'render' is defined but never used.","'value' is assigned a value but never used.",["183"],["184"],"'ReactNode' is defined but never used.","'SOFt_BLUE' is assigned a value but never used.","'DARK_BLUE' is assigned a value but never used.","'BLUE_GRAY' is assigned a value but never used.","'WHITE_SMOKE' is assigned a value but never used.","'BLACK50' is assigned a value but never used.","'BLUE50' is assigned a value but never used.","'GRAY80' is assigned a value but never used.","'selected' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEmployeeOne'. Either include it or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [getEmployeeOne]",{"range":"188","text":"189"},[998,1005],"[getEmployeeOne]"]